{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\React\\\\react_naver_api\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const NAVER_CLIENT_ID = \"NOt2yyw4Gn6Y5gvyBB8T\";\n  const NAVER_CLIENT_SECRET = \"unzLll0HB9\";\n\n  const onClick = () => {\n    axios // url로 접근시 console창에 Access to XMLHttpRequest... 와 같은 오류 발생\n    // -> package.json에서 proxy 추가\n    // .get(\"/v1/search/blog\",{\n    //   params: {\n    //     query: \"react\",     // 이미지 검색 테스트\n    //     start: 1,           // 검색 시작 위치\n    //     display: 5,         // 가져올 이미지 개수\n    //     sort: \"sim\",        // 정렬 유형 (sim:유사도)\n    //   },\n    //   headers: {\n    //     \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n    //     \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET,\n    //   },\n    // })\n    .get(\"/v1/search/movie\", {\n      params: {\n        query: \"react\",\n        // 이미지 검색 테스트\n        start: 1,\n        genre: 1,\n        country: 'KR',\n        yearfrom: 2000,\n        yearto: 2020,\n        display: 5,\n        sort: \"sim\"\n      },\n      headers: {\n        \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n        \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET\n      }\n    }).then(response => {\n      setData(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \" \\uBD88\\uB7EC\\uC624\\uAE30 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 7,\n      value: JSON.stringify(data, null, 2),\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"r4Mei8r/vISzc+89378cYwOGDkw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","axios","App","data","setData","NAVER_CLIENT_ID","NAVER_CLIENT_SECRET","onClick","get","params","query","start","genre","country","yearfrom","yearto","display","sort","headers","then","response","JSON","stringify"],"sources":["C:/project/React/react_naver_api/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useCallback} from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n\n  const NAVER_CLIENT_ID = \"NOt2yyw4Gn6Y5gvyBB8T\";\n  const NAVER_CLIENT_SECRET = \"unzLll0HB9\";\n\n  const onClick = () => {\n    axios\n      // url로 접근시 console창에 Access to XMLHttpRequest... 와 같은 오류 발생\n      // -> package.json에서 proxy 추가\n      // .get(\"/v1/search/blog\",{\n      //   params: {\n      //     query: \"react\",     // 이미지 검색 테스트\n      //     start: 1,           // 검색 시작 위치\n      //     display: 5,         // 가져올 이미지 개수\n      //     sort: \"sim\",        // 정렬 유형 (sim:유사도)\n      //   },\n      //   headers: {\n      //     \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n      //     \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET,\n      //   },\n      // })\n\n      .get(\"/v1/search/movie\", {\n        params: {\n          query: \"react\",     // 이미지 검색 테스트\n          start: 1,\n          genre: 1,\n          country: 'KR',\n          yearfrom: 2000,\n          yearto: 2020,\n          display: 5,\n          sort: \"sim\",\n        },\n        headers: {\n          \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n          \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET,\n        },\n      })\n      .then((response) => {\n        setData(response.data);\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <button onClick={onClick}> 불러오기 </button>\n      </div>\n      {data && (\n        <textarea rows={7} value={JSON.stringify(data, null, 2)} readOnly={true} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;EAEA,MAAMM,eAAe,GAAG,sBAAxB;EACA,MAAMC,mBAAmB,GAAG,YAA5B;;EAEA,MAAMC,OAAO,GAAG,MAAM;IACpBN,KAAK,CACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAdG,CAgBFO,GAhBH,CAgBO,kBAhBP,EAgB2B;MACvBC,MAAM,EAAE;QACNC,KAAK,EAAE,OADD;QACc;QACpBC,KAAK,EAAE,CAFD;QAGNC,KAAK,EAAE,CAHD;QAINC,OAAO,EAAE,IAJH;QAKNC,QAAQ,EAAE,IALJ;QAMNC,MAAM,EAAE,IANF;QAONC,OAAO,EAAE,CAPH;QAQNC,IAAI,EAAE;MARA,CADe;MAWvBC,OAAO,EAAE;QACP,qBAAqBb,eADd;QAEP,yBAAyBC;MAFlB;IAXc,CAhB3B,EAgCGa,IAhCH,CAgCSC,QAAD,IAAc;MAClBhB,OAAO,CAACgB,QAAQ,CAACjB,IAAV,CAAP;IACD,CAlCH;EAmCD,CApCD;;EAsCA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAEI,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAIGJ,IAAI,iBACH;MAAU,IAAI,EAAE,CAAhB;MAAmB,KAAK,EAAEkB,IAAI,CAACC,SAAL,CAAenB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA1B;MAAyD,QAAQ,EAAE;IAAnE;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAtDD;;GAAMD,G;;KAAAA,G;AAwDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}